//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NoiseCalculator.Domain.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DomainResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DomainResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NoiseCalculator.Domain.Resources.DomainResources", typeof(DomainResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the calculated noise dosage is 100 % the employee must remain in areas where the noise level is below 80 dBA for the rest of the day and not perform any work that produces noise above 80 dBA. The employee must also avoid areas with impulse noise (sudden bangs), and work that produces impulse noise..
        /// </summary>
        internal static string Footer80dBA {
            get {
                return ResourceManager.GetString("Footer80dBA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;About the calculations:&lt;/b&gt;&lt;br/&gt;The method for risk assessment of noise exposure is described in GL0169 and enacted in TR0926&lt;br/&gt;&lt;br/&gt;When the calculated noise exposure shows 100%, the calculated exposure is 80 dBA inside the hearing protection &lt;br/&gt;&lt;br/&gt;If the calculated exposure is 100% (for a work activity) the employee shall not carry out noisy work operations or stay in areas with noise level above 80 dBA during the rest of that day. The employee cannot stay in areas with impulse noise (hammer, ban [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FooterCalculations {
            get {
                return ResourceManager.GetString("FooterCalculations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Contact occupational hygienist:&lt;/b&gt;&lt;br/&gt;-	In case of uncertainty regarding the calculations&lt;br/&gt;-	If the work operation does not exist in the list&lt;br/&gt;-	Regarding questions about sound reduction.
        /// </summary>
        internal static string FooterContact {
            get {
                return ResourceManager.GetString("FooterContact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The calculation of noise exposure has taken breaks (like moving to a new location) into account and made corrections to the measured noise levels share of a normal work cycle. The provided work time shall reflect the total time spent on the task, including the non-noisy work. If there are considerable changes in the normal work cycle, contact an industrial hygienist..
        /// </summary>
        internal static string FooterDynamicCorrectionForMeasuredNoiseLevel {
            get {
                return ResourceManager.GetString("FooterDynamicCorrectionForMeasuredNoiseLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following conditions apply to the hearing protection used when performing noisy work operations:&lt;br/&gt;
        ///The hearing protection shall be well maintained and used correctly. &lt;br/&gt;
        ///When using disposable ear plugs, training in correct use and insertion shall be given &lt;br/&gt;
        ///When using custom molded ear plugs, insertion training shall be given..
        /// </summary>
        internal static string FooterDynamicNoiseProtection {
            get {
                return ResourceManager.GetString("FooterDynamicNoiseProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task based noise risk assessments are based on area noise levels up to 90 dBA. For noisy work tasks carried out in areas with noise levels above 90 dBA, or areas with a lot of reverberation (e.g. in tanks), field measured noise levels must be entered into the calculator..
        /// </summary>
        internal static string FooterDynamicValidForAreaNoiseUpTo90dBA {
            get {
                return ResourceManager.GetString("FooterDynamicValidForAreaNoiseUpTo90dBA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This noise calculator is developed by Statoil and is available as a planning tool for those who wish to use it. The tool includes work in noisy conditions and/or noise produced, and provides a possiblity to combine noisedata with preventive measures such as limitation of time in noisy conditions and hearing protection. It is also possible to print the evaluation in pdf format..
        /// </summary>
        internal static string FooterGL0169 {
            get {
                return ResourceManager.GetString("FooterGL0169", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;About hearing protectors:&lt;/b&gt;&lt;br/&gt;Single hearing protection implies earplugs or earmuffs. Double hearing protection implies earmuffs and earplugs used at the same time. &lt;br&gt;&lt;br/&gt;The following conditions apply when carrying out noisy work operations: &lt;br/&gt;-	The hearing protection shall be well maintained and used correctly. &lt;br/&gt;-	When using disposable earplugs or custom moulded earplugs, individual training in their correct use and insertion shall be given &lt;br/&gt;-	It shoud be verified that earplugs give a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FooterNoiseProtection {
            get {
                return ResourceManager.GetString("FooterNoiseProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single hearing protection means ear muffs or ear plugs. Double hearing protection means ear muffs and ear plugs used at the same time.
        /// </summary>
        internal static string FooterNoiseProtectionDefinition {
            get {
                return ResourceManager.GetString("FooterNoiseProtectionDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a noisy work operation is missing from the list one must use «non-noisy work” with the corresponding noise level. Report the noisy work operation to the industrial hygienist for risk assessment and entry into Noise calculator..
        /// </summary>
        internal static string FooterUseNoisyWorkWhenTaskIsMissing {
            get {
                return ResourceManager.GetString("FooterUseNoisyWorkWhenTaskIsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculated noise exposure is not akseptable and work can not be performed as planned..
        /// </summary>
        internal static string NoiseLevelStatusTextCritical {
            get {
                return ResourceManager.GetString("NoiseLevelStatusTextCritical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculated noise exposure is not akseptable and work can not be performed as planned. If the work has allready been performed it must be reported as &quot;Danger of Work Related Injury&quot;.
        /// </summary>
        internal static string NoiseLevelStatusTextDangerOfWorkRelatedInjury {
            get {
                return ResourceManager.GetString("NoiseLevelStatusTextDangerOfWorkRelatedInjury", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculated noise exposure is acceptable, but the employee can not be exposed for more noise this work day..
        /// </summary>
        internal static string NoiseLevelStatusTextMaximumAllowedDosage {
            get {
                return ResourceManager.GetString("NoiseLevelStatusTextMaximumAllowedDosage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculated noise exposure is acceptable..
        /// </summary>
        internal static string NoiseLevelStatusTextNormal {
            get {
                return ResourceManager.GetString("NoiseLevelStatusTextNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculated noise exposure is acceptable, but is approaching maximum allowed exposure..
        /// </summary>
        internal static string NoiseLevelStatusTextWarning {
            get {
                return ResourceManager.GetString("NoiseLevelStatusTextWarning", resourceCulture);
            }
        }
    }
}
